name: Liquibase Reusable Action
description: This workflow runs Liquibase to build artifact.

on:
  workflow_call:
    inputs:
      changeLogFile:
        description: 'Path to the changelog file'
        required: true
        type: string

      cd_flowfile:
        description: 'Path to the CD flowfile'
        required: false
        type: string

      ci_flowfile:
        description: 'Path to the CI flowfile'
        required: false
        type: string
  

jobs:
  liquibase-Execution:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Liquibase
        run: |
          wget https://github.com/liquibase/liquibase/releases/download/v4.33.0/liquibase-4.33.0.zip
          mkdir -p /opt/liquibase
          unzip liquibase-4.33.0.zip -d /opt/liquibase
          echo "/opt/liquibase" >> $GITHUB_PATH
          ls -l /opt/liquibase  # Debug

      - name: Download JDBC + Vault Extensions
        run: |
          wget -O /opt/liquibase/lib/mysql-connector-j-9.3.0.jar \
            https://repo1.maven.org/maven2/com/mysql/mysql-connector-j/9.3.0/mysql-connector-j-9.3.0.jar
          wget -O /opt/liquibase/lib/liquibase-hashicorp-vault-2.0.5.jar \
            https://repo1.maven.org/maven2/org/liquibase/ext/vaults/liquibase-hashicorp-vault/2.0.5/liquibase-hashicorp-vault-2.0.5.jar

      - name: generate vault Token
        run: |
          # Call Vault with approle
          curl -s -k \
            -H "X-Vault-Namespace: admin/liquibase" \
            --request POST \
            --data '{
              "role_id": "bb5323d8-51a1-3cae-a732-f1325e3ad66d",
              "secret_id": "01d0613a-53f0-cfdc-f621-102f321f7061"
            }' \
            https://vault-cluster-1-public-vault-399c773d.4213bc99.z1.hashicorp.cloud:8200/v1/auth/approle/login \
            | jq -r '.auth.client_token' > token.txt

          # Read token into env var
          VAULT_TOKEN=$(cat token.txt)
          echo "VAULT_TOKEN=$VAULT_TOKEN" >> $GITHUB_ENV

      # Run CI flow if provided
      - name: Run Liquibase CI Flow
        if: ${{ inputs.ci_flowfile != '' }}
        run: |
          liquibase \
            --changeLogFile=${{ inputs.changeLogFile }} \
            flow \
            --flow-file=${{ inputs.ci_flowfile }} \
            --logLevel=info

      # Run CD flow if provided
      - name: Run Liquibase CD Flow
        if: ${{ inputs.cd_flowfile != '' }}
        run: |
          liquibase \
            --changeLogFile=${{ inputs.changeLogFile }} \
            flow \
            --flow-file=${{ inputs.cd_flowfile }} \
            --logLevel=info

      # Rollback for CD only
      - name: Rollback Liquibase CD
        if: failure() && inputs.cd_flowfile != ''
        run: |
          liquibase \
            --changeLogFile=${{ inputs.changeLogFile }} \
            rollbackCount 1 \
            --logLevel=info
